{"version":3,"sources":["components/Navigation/navigation.js","Algorithms/Algorithms.js","components/SortingVisualizer/SortingVisualizer.js","containers/Layout.js","App.js","reportWebVitals.js","index.js"],"names":["Navigation","mergeSort","array","animationsMerge","length","auxillaryArray","slice","doMergeSort","mainArray","startIndex","endIndex","midIndex","Math","floor","i","k","j","animation","swap","push","Merge","SortingVisualizer","state","arrayToSort","this","resetArray","min","max","arrayGiven","random","setState","animations","valueToCompare","temp","doBubbleSort","SortingAlgos","arrayBars","document","getElementsByClassName","setTimeout","barOneId","barTwoId","barOneHeight","style","height","barTwoHeight","animationsMergeSort","console","log","newHeight","className","map","value","idValue","width","display","onClick","BubbleSort","MergeSort","Component","Layout","React","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"4QAWeA,MATf,WAEI,OACI,cAAC,WAAD,K,aCsCD,SAASC,EAAUC,GAEtB,IAAMC,EAAkB,GACxB,GAAGD,EAAME,QAAU,EACf,OAAOF,EAEX,IAAMG,EAAiBH,EAAMI,QAE7B,OADAC,EAAYL,EAAM,EAAEA,EAAME,OAAO,EAAED,EAAgBE,GAC5CF,EAsCX,SAASI,EAAYC,EAAWC,EAAYC,EAAUP,EAAiBE,GAEnE,GAAGI,IAAeC,EAAlB,CAGA,IAAIC,EAAWC,KAAKC,OAAOJ,EAAaC,GAAU,GAElDH,EAAYF,EAAgBI,EAAYE,EAAUR,EAAiBK,GACnED,EAAYF,EAAeM,EAAS,EAAGD,EAASP,EAAgBK,GA1CpE,SAAeA,EAAWC,EAAYE,EAAUD,EAAUP,EAAiBE,GAOvE,IALA,IAAIS,EAAEL,EACFM,EAAEN,EACFO,EAAEL,EAAS,EAETM,EAAY,GACZH,GAAKH,GAAYK,GAAIN,GAAS,CAChC,IAAMO,EAAU,GACbZ,EAAeS,IAAMT,EAAeW,IACnCC,EAAUC,KAAO,CAACH,EAAIV,EAAeS,IACrCN,EAAUO,KAAOV,EAAeS,OAEhCG,EAAUC,KAAO,CAACH,EAAIV,EAAeW,IACrCR,EAAUO,KAAOV,EAAeW,MAEpCb,EAAgBgB,KAAKF,EAAUC,MAGnC,KAAMJ,GAAKH,GACPM,EAAUC,KAAO,CAACH,EAAEV,EAAeS,IACnCX,EAAgBgB,KAAKF,EAAUC,MAC/BV,EAAUO,KAAOV,EAAeS,KAGpC,KAAME,GAAKN,GACPO,EAAUC,KAAO,CAACH,EAAEV,EAAeW,IACnCb,EAAgBgB,KAAKF,EAAUC,MAC/BV,EAAUO,KAAOV,EAAeW,KAepCI,CAAMZ,EAAWC,EAAYE,EAAUD,EAAUP,EAAiBE,ICGvDgB,M,4MA/FXC,MAAM,CACFC,YAAY,I,uDAGhB,WACIC,KAAKC,e,wBAET,WAEI,IADA,IAkFuBC,EAAIC,EAlFrBC,EAAW,GACRd,EAAI,EAAGA,EAAI,IAAKA,IACrBc,EAAWT,MAgFQO,EAhFmB,EAgFfC,EAhFiB,IAkFzCf,KAAKC,MAAOD,KAAKiB,UAAaF,EAAMD,EAAM,GAAMA,KAhFnDF,KAAKM,SAAS,CAACP,YAAaK,M,wBAIhC,WAII,IAHA,IAAMG,EDvBP,SAAoB7B,GAEvB,IAAM6B,EAAa,GAGnB,OAKJ,SAAsB7B,EAAM6B,GAExB,IAAI,IAAIjB,EAAE,EAAEA,EAAEZ,EAAME,OAAOU,IAKvB,IAHA,IAAIkB,EAAiB,EAEff,EAAY,GACVD,EAAE,EAAEA,EAAEd,EAAME,OAAOU,EAAEE,IAGzB,GAAGd,EAAM8B,GAAkB9B,EAAMc,GAAG,CAChC,IAAIiB,EAAO/B,EAAM8B,GACjB9B,EAAM8B,GAAkB9B,EAAMc,GAC9Bd,EAAMc,GAAKiB,EACXhB,EAAUC,KAAO,CAACc,EAAgBhB,GAClCe,EAAWZ,KAAKF,EAAUC,MAE1Bc,SAEK9B,EAAM8B,IAAmB9B,EAAMc,KACpCgB,EAAiBhB,EAEjBC,EAAUC,KAAO,CAACc,EAAgBhB,GAClCe,EAAWZ,KAAKF,EAAUC,OA9BtCgB,CAAahC,EAAM6B,GAEZA,ECkBgBI,CAAwBX,KAAKF,MAAMC,aAChDa,EAAYC,SAASC,uBAAuB,YAF1C,WAIAxB,GAEJyB,YAAW,WAAK,IAAD,cACkBR,EAAWjB,GAD7B,GACJ0B,EADI,KACMC,EADN,KAILC,EAAeN,EAAUI,GAAUG,MAAMC,OACzCC,EAAeT,EAAUK,GAAUE,MAAMC,OAE/CR,EAAUI,GAAUG,MAAMC,OAASC,EACnCT,EAAUK,GAAUE,MAAMC,OAASF,IAElC,EAAF5B,IAZCA,EAAI,EAAGA,EAAEiB,EAAW3B,OAAOU,IAAK,EAAhCA,K,uBAkBZ,WAEI,IAAMgC,EAAsBX,EAAuBX,KAAKF,MAAMC,aACxDa,EAAYC,SAASC,uBAAuB,YAGlDS,QAAQC,IAAIF,GACZ,IAPO,eAOChC,GAEJyB,YAAW,WAAK,IAAD,cACmBO,EAAoBhC,GADvC,GACJ0B,EADI,KACMS,EADN,KAESb,EAAUI,GAAUG,MAE5BC,OAAZ,UAAwBK,EAAxB,QAEC,EAAFnC,IARCA,EAAI,EAAGA,EAAEgC,EAAoB1C,OAAOU,IAAK,EAAzCA,K,oBAaZ,WAAS,IAAD,OAEGS,EAAeC,KAAKF,MAApBC,YACP,OACI,eAAC,WAAD,WACI,qBAAK2B,UAAU,YAAf,SACC3B,EAAY4B,KAAI,SAACC,EAAMC,GACpB,OACI,qBAAKH,UAAU,WACXP,MAAO,CACCW,MAAM,eAAD,OAAiB/B,EAAYnB,OAA7B,KACLwC,OAAO,GAAD,OAAKQ,EAAL,OAHlB,SAQI,mBAAGT,MAAO,CAACY,QAAS,QAApB,SAA8BH,KAHzBC,QAUjB,wBAAQG,QAAS,kBAAK,EAAK/B,cAA3B,gCACA,wBAAQ+B,QAAS,kBAAI,EAAKC,cAA1B,yBACA,wBAAQD,QAAS,kBAAI,EAAKE,aAA1B,+B,GArFgBC,aCYjBC,E,4JAVX,WACI,OACI,eAAC,WAAD,WACI,cAAC,EAAD,IACA,cAAC,EAAD,W,GANKC,IAAMF,WCOZG,MARf,WACE,OACE,qBAAKZ,UAAU,MAAf,SACE,cAAC,EAAD,OCMSa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFrC,SAASsC,eAAe,SAM1BZ,M","file":"static/js/main.82b7b685.chunk.js","sourcesContent":["import React, { Fragment } from 'react'\r\n\r\nfunction Navigation(){\r\n\r\n    return(\r\n        <Fragment>\r\n            \r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default Navigation;","export function bubbleSort(array){\r\n\r\n    const animations = [];\r\n    doBubbleSort(array,animations);\r\n\r\n    return animations;\r\n    \r\n}\r\n\r\n\r\nfunction doBubbleSort(array,animations){\r\n    \r\n    for(let i=0;i<array.length;i++){\r\n          \r\n        let valueToCompare = 0;\r\n\r\n        const animation = {};\r\n        for(let j=0;j<array.length-i;j++){\r\n\r\n\r\n            if(array[valueToCompare] > array[j]){\r\n                let temp = array[valueToCompare];\r\n                array[valueToCompare] = array[j];\r\n                array[j] = temp;\r\n                animation.swap = [valueToCompare, j];\r\n                animations.push(animation.swap);\r\n\r\n                valueToCompare++;\r\n\r\n            }else if(array[valueToCompare] <= array[j]){\r\n                valueToCompare = j;\r\n\r\n                animation.swap = [valueToCompare, j];\r\n                animations.push(animation.swap);\r\n\r\n            }\r\n\r\n        }\r\n        \r\n    }\r\n\r\n}\r\n\r\nexport function mergeSort(array){\r\n\r\n    const animationsMerge = [];\r\n    if(array.length <= 1){\r\n        return array;\r\n    }\r\n    const auxillaryArray = array.slice();\r\n    doMergeSort(array,0,array.length-1,animationsMerge,auxillaryArray);\r\n    return animationsMerge;\r\n\r\n}\r\n\r\nfunction Merge(mainArray, startIndex, midIndex, endIndex, animationsMerge, auxillaryArray){\r\n\r\n    let i=startIndex;\r\n    let k=startIndex;\r\n    let j=midIndex+1;\r\n\r\n    const animation = {};\r\n    while(i <= midIndex && j<= endIndex){\r\n        const animation={};\r\n        if(auxillaryArray[i] <= auxillaryArray[j]){\r\n            animation.swap = [k , auxillaryArray[i]];\r\n            mainArray[k++] = auxillaryArray[i++];\r\n        }else{\r\n            animation.swap = [k , auxillaryArray[j]];\r\n            mainArray[k++] = auxillaryArray[j++];\r\n        }\r\n        animationsMerge.push(animation.swap);\r\n    }\r\n\r\n    while(i <= midIndex){\r\n        animation.swap = [k,auxillaryArray[i]];\r\n        animationsMerge.push(animation.swap);\r\n        mainArray[k++] = auxillaryArray[i++];\r\n    }\r\n\r\n    while(j <= endIndex){\r\n        animation.swap = [k,auxillaryArray[j]];\r\n        animationsMerge.push(animation.swap);\r\n        mainArray[k++] = auxillaryArray[j++];\r\n    }\r\n\r\n}\r\n\r\n\r\nfunction doMergeSort(mainArray, startIndex, endIndex, animationsMerge, auxillaryArray){\r\n\r\n    if(startIndex === endIndex) return;\r\n\r\n    // console.log(\"array-length: \"+arrayLength);\r\n    let midIndex = Math.floor((startIndex + endIndex)/2);\r\n\r\n    doMergeSort(auxillaryArray, startIndex, midIndex, animationsMerge, mainArray);\r\n    doMergeSort(auxillaryArray,midIndex+1, endIndex,animationsMerge,mainArray);\r\n    Merge(mainArray, startIndex, midIndex, endIndex, animationsMerge, auxillaryArray);\r\n\r\n\r\n}\r\n\r\n","import React,{Component, Fragment} from 'react';\r\nimport './SortingVisualizer.css';\r\nimport * as SortingAlgos from '../../Algorithms/Algorithms';\r\n\r\nclass SortingVisualizer extends Component{\r\n\r\n    state={\r\n        arrayToSort:[]\r\n    }\r\n    \r\n    componentDidMount(){\r\n        this.resetArray();\r\n    }\r\n    resetArray(){\r\n        const arrayGiven=[];\r\n        for (let i = 0; i < 500; i++) {\r\n            arrayGiven.push(randomIntFromInterval(5,700));\r\n        }    \r\n        this.setState({arrayToSort: arrayGiven});\r\n    }\r\n\r\n\r\n    BubbleSort(){\r\n        const animations = SortingAlgos.bubbleSort(this.state.arrayToSort);\r\n        const arrayBars = document.getElementsByClassName('arrayBar');            \r\n\r\n        for(let i = 0; i<animations.length;i++){\r\n\r\n            setTimeout(()=>{\r\n                const [barOneId, barTwoId] = animations[i];\r\n                // const tempHeight = arrayBars[barOneId].style.height;\r\n\r\n                const barOneHeight = arrayBars[barOneId].style.height;\r\n                const barTwoHeight = arrayBars[barTwoId].style.height;\r\n                \r\n                arrayBars[barOneId].style.height = barTwoHeight;\r\n                arrayBars[barTwoId].style.height = barOneHeight;\r\n\r\n            }, i*1);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    MergeSort(){\r\n        // const a = [2,4,1,6,8,5,3,7];\r\n        const animationsMergeSort = SortingAlgos.mergeSort(this.state.arrayToSort);\r\n        const arrayBars = document.getElementsByClassName('arrayBar'); \r\n\r\n        // console.log(arrayBars);\r\n        console.log(animationsMergeSort);\r\n        for(let i = 0; i<animationsMergeSort.length;i++){\r\n\r\n            setTimeout(()=>{\r\n                const [barOneId, newHeight] = animationsMergeSort[i];\r\n                const barOneStyle = arrayBars[barOneId].style;\r\n\r\n                barOneStyle.height = `${newHeight}px`;\r\n\r\n            }, i*5);\r\n\r\n        }\r\n    }\r\n\r\n    render(){\r\n\r\n        const {arrayToSort} = this.state;\r\n        return(\r\n            <Fragment>\r\n                <div className=\"container\">\r\n                {arrayToSort.map((value,idValue) => {\r\n                    return(\r\n                        <div className=\"arrayBar\" \r\n                            style={{\r\n                                    width: `calc(100% / ${arrayToSort.length})`,\r\n                                    height: `${value}px`,\r\n                                }} \r\n                            key={idValue}\r\n                            // id={value}\r\n                            >\r\n                            <p style={{display: 'none'}}>{value}</p>\r\n                            \r\n                        </div>  \r\n                        \r\n                    );\r\n                })}\r\n                </div>\r\n                <button onClick={()=> this.resetArray()}>Generate New Array</button>\r\n                <button onClick={()=>this.BubbleSort()}>Bubble Sort</button>\r\n                <button onClick={()=>this.MergeSort()}>Merge Sort</button>\r\n                \r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nfunction randomIntFromInterval(min,max)\r\n{\r\n    return Math.floor( Math.random()*  ( max - min + 1 ) + min );\r\n}\r\n\r\nexport default SortingVisualizer;\r\n\r\n","import React,{Fragment} from 'react'\r\nimport Navigation from \"../components/Navigation/navigation\"\r\nimport SortingVisualizer from \"../components/SortingVisualizer/SortingVisualizer\";\r\n\r\nclass Layout extends React.Component{\r\n\r\n    render(){\r\n        return(\r\n            <Fragment>\r\n                <Navigation></Navigation>\r\n                <SortingVisualizer></SortingVisualizer>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Layout;","import './App.css';\nimport Layout from \"../src/containers/Layout\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Layout></Layout>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}